name: Cpn CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })' || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      MONGODB_URI_DEV: mongodb://localhost:27017/cpn_test
      REDIS_URL: ${{ secrets.REDIS_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      VITE_WS_URL: ${{ secrets.VITE_WS_URL }}
      SUPERADMIN_USERNAME: ${{ secrets.SUPERADMIN_USERNAME }}
      SUPERADMIN_PASSWORD: ${{ secrets.SUPERADMIN_PASSWORD }}
      SUPERADMIN_EMAIL: ${{ secrets.SUPERADMIN_EMAIL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install frontend dependencies
        run: |
          cd frontEnd/cpnui
          npm ci

      - name: Run ESLint
        run: |
          cd frontEnd/cpnui
          npm run lint

      - name: Run backend tests
        run: |
          cd backend
          npm test

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ðŸ”¹ Different tags based on branch
      - name: Set Docker tags
        id: vars
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "BACKEND_TAG=${{ secrets.DOCKERHUB_USERNAME }}/cpn-backend:latest" >> $GITHUB_ENV
            echo "FRONTEND_TAG=${{ secrets.DOCKERHUB_USERNAME }}/cpn-frontend:latest" >> $GITHUB_ENV
          else
            echo "BACKEND_TAG=${{ secrets.DOCKERHUB_USERNAME }}/cpn-backend:dev" >> $GITHUB_ENV
            echo "FRONTEND_TAG=${{ secrets.DOCKERHUB_USERNAME }}/cpn-frontend:dev" >> $GITHUB_ENV
          fi

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_TAG }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontEnd/cpnui
          file: ./frontEnd/cpnui/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_TAG }}
